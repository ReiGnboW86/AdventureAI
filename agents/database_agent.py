"""
I dont Think needs to be a agent either.
It could simply just be a database.


Keep in mind, here is the place where ALL stuff and things are stored.
This is just a place for the game to find out what happens when things happen.

Lets say I swing my dick in your general direction as an attack.
The game checks, what auras does Björn have active?
Oh shit! He has Aura of Asian Persuasion. What does that do?
According to the database it shrinks the penis length of all players with an asian heritage by 4 inches.
My dick just barely misses and grazes the chin of my opponent.
This leaves Björn with the extremely heterosexual debuff. What is that? It doesnt exist in the database.
An Agent takes into context what just happens and decides that the debuff means that
whoever has it cannot approach other male characters.

You get the idea.


Example of a database:

This would be the players.
All this can be randomly generated by the AI at character creation.
Inventory should probbably be empty when game starts.
Clothes could be chosen but should have no effects at start.

adventurers(playable characters) = {
    "Wise old man": {
        "description": "An old man with a love for the not so old things in life." # This could be user input interpreted by the AI to define the type of person or something.
        "stats": {
            "health": 70
            "strength": 5,
            "dexterity": 6,
            "intelligence": 10,
            "charisma": 7,
            "stamina": 2,
        },
        "inventory": [
            Bag of candy,
            Invisibility potion,
            Bottle of chlorophorm,
            Handkerchief,
        ],
        "currently_wearing": {
            "head": Spectacles,
            "chest": Wolf t-shirt,
            "legs": Manchester pantaloons,
            "feet": Hospital slippers,
        },
        "effects": [
            Aura of the white van,
            Shackles of the old and tired,
        ]
    }, ...more players...
}


Here are all the NPCs.
We dont need as much info for them.
Basic stats and maybe a description if they are able to interact with dialouge.
Drop table is only relevant IF we have a set of already defined items. The number is drop rate.
(Could just be a list and then we chose one random item from the table upon death)

We could either make these items AI generated or come up with them ourselves.
Having them be AI generated on the fly is fun and makes for more randomness fun.
Having them already created makes for a solid gameplay with balanced items and our footprint on the game design.

NPCs = {
"Innocent Child": {
    "stats": {
        "strength": 1,
        "dexterity": 7,
        "intelligence": 2,
        "charisma": 9,
        "stamina": 5,
    },
    "drop_table": {
        Candy: 8,
        Tiny Underwear: 4,
        Toy Horse: 2,
    },
},
...more added as game progresses...


Items are stored here.
We could also divide 'Items' into several categories such as "consumables", "equipment", "artefacts" the list goes on.
Notive how items are not strings. They need to be able to move around the code and carry their value from page to page.
Items can give buffs/debuffs, increase stats, give of auras etc.

Items = {
    Candy: {
        "type": consumable,
        "description": "A minty candy wrapped in blue and white paper. I wonder if it can be used as a lure..",
        "effects": [
            Sugar Rush,
            Fresh Breath,
        ]
    }
    Tiny Underwear: {
        "type": trinket,
        "description": "A pair of very small underwear. They have a stain on the outside, but the insides are clean!",
        "effects": [
            The ferocity of NAMBLA,
            Shunned by society,
        ]
    } ...more as game progresses...
}


Effects are auras, good or bad.
The key of the dict should not be string.
Not sure about the value. Might need to do some homework there on how to carry over "increase health by 2".

Effects = {
    Sugar Rush: "+3 Dexterity",
    Fresh Breath:" +2 Charisma",
    The ferocity of NAMBLA: "+5 Dexterity, +5 Strength when fighting enemies younger than you",
    Shunned by society: "Will trigger locals to attack you on sight when not disguised",
    ... more as game progresses ...
}



"""


class DatabaseAgent:
    pass
